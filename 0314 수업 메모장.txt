03/14
자바스크립트
자바 스크립트 비동기적 기능?

명령형 <-> 선언형
 -> 차근차근 가는 형태
함수형
 -> 함수를 위주로 돌아가는 것
프로토타입
 -> 
인터프리터 언어(자바는 컴파일)
-> 자바는 JVM??
타입을 명시하지 않음
Ajax
-> 비동기적으로 서버와 브라우저가 데이터를 교환할 수 있는 기능
 -> DB데이터 안에 있는 것을 빼와서 해당 내용만 수정?
  -> 페이지에서 끊임없이 서버 클라이엍느 통신이 이루어지는 것

DOM 요소 찾기 -> script는 부가되는 요소로서 쓰고 바로 사라짐
1. 태그이름을 이용한 선택
2. 아이디를 이용한 선택
3. 클래스를 이용한 선택
4. name 속성을 이용한 선택
5. CSS선택자를 이용한 선택

출력문
innerHTML
document.write  //HTML 문서에 출력
console.log()     //브라우저 콘솔에 출력
 
값(value)
var str = 'Hello World';
str이라는 이름의 변수를 선언하고 

변수 호이스팅
var 선언문 or  function선언문 등 모든 선언문이 해당 Scope의 선두로 옮겨진 것처럼 동작하는 특성?

1. 선언 단계
2. 초기화 단계
3. 할당 단계

스코프(Scope) -> 범위
global(전역) - 어느 곳에서든지 해당 변수에 접근할 수 있음
local(지역) - 해당 지역에서만 접근할 수 있어 지역을 벗어난 곳에선 접근할 수 없음

scope
function위주로 돌아간다.
자바스크립트
 -> 함수 레벨 스코프(function-level scope)
블록 레벨 스코프
모든 코드 블록(함수, if문, for문 while문, try/catch문 등) 내에서 선언된 변수는 코드 블록 내에서만 유효 즉, 선언한 변수는 지역 변수

데이터 타입
원시 타입
 -number
 - string
 - boolean
 - null
  - underfined
 - symbol

타입 변환
묵시적 타입 변환 -> 정의되지 않은 값이나 표현할 수 없는 값
명시적 타입 변환 -> 자동으로 타입 변환을 사용하지만, 명시적으로 타입을 변환할 방법 제공
number() , String(), boolean(), object(), parseint(), parsefloat()

연산자
산순연산자 (+ - * **(거듭제곱) / %)
피연산자
대입 연산자
^=(논리 연산)

단축평가 
앞에 상황이 거짓이면 뒤에도 에러가 나기 때문에

비트 연산자
^-> 두개 값이 일치하면 결과값은 false(비트 XOR연산)

삼항 연산자
표현식 ? 반환값 1 : 반환값 2

타입의 판단
typeof 연산자
null = "object"
underfined = "underfined"
함수가 아닌 객체 = "object"

함수 호이스팅?
변수 호이스팅?

NaN(Not a Number) 문자열이여서 인식 불가능
parseInt(funtion)

비교연산자
문자열 비교하는데 왜 비교가 되지???
===

var   중복 선언할 때 사용하는 것


let

prompt -> 팝업창에서 입력값을 받음 

confirm -> 팝업창에서 true of false로 받아서 boolean값을 받음

제어문
  조건문
  반복문
	for/in -> properties를 순회할 수 있도록 해주는 반복문
	for/of -> Array, Map, Set, arguments 객체 등
	  -> 향상된 for문과 동일하게 들어가는데 들어오는 것의 결	과값에 따라 달라짐?

for문  
syntax 자바랑 똑같으나 for/in, for/of 두가지가 추가 되어 나타남

배열
 -> 인덱스로 참조되는 정렬된 값의 집합
	- 배열 요소의 타입이 고정되어 있지 않음
	- 배열 요소의 인덱스가 불연속 가능(띄엄띄엄 나와도 됨)

const -> 재선언, 재할당? 불가

arr 자바와는 다르게 범위 지정이 안되있고 추가 요소 생성 가능
추가 가능한 방법
	arr[arr.length] = 추가할 요소
	arr[특정인덱스] = 추가할 요소
	arr.push	추가할 요소

array function
isArray, indexOf, includes

배열 함수
push - 배열 맨 뒤에 요소를 추가(배열 자체 수정하고 길이 반환)
unshift - 배열 맨 앞에 요소를 추가
pop - 배열 맨 뒤에 요소를 제거(
shift - 배열 맨 앞의 요소를 제거
splice - 배열 특정 위치에 요소를 추가, 제거

slice - 잘라진 새로운 배열을 만듬
concat - 여러개의 배열을 연결(불러진 순서대로 가서 붙음)
sort - 정렬하고자 할때 사용함(321412-> 112234)	
reverse - 반대로 보여지게 하는 값
flat - 중첩 배열을 하나의 배열로 만들어줌[ []]<-이런식으로 잇는거 깨줌
fill 내가 지정한 값으로 배열을 채우기 res.fill('num',1,3) -> 1~3까지
join 내가 넣고자 하는 형태로 객체 사이사이 들어가서 표현 되게 함
0 | num | string | string

for in - 객체의 프로퍼티 키 열거 전용

for of - 이터러블 순회 전용


